SELECT
    t,
	ARRAY(
		SELECT
			v::varchar(1)::"char"
		FROM
			generate_series(max(0, t - 10),  t) as v
	) AS v
	INTO test_char
FROM
	generate_series(1, 200) as t;
SET anyarray.similarity_type=cosine;
SELECT  t, similarity(v, '{1,9,8,7,6,5,4,3,2,1}') AS s FROM test_char 
	WHERE v % '{1,9,8,7,6,5,4,3,2,1}' ORDER BY s DESC, t;
 t  |    s     
----+----------
 11 |        1
 12 |        1
  9 | 0.948683
 10 | 0.948683
 13 | 0.942809
  8 | 0.888889
 14 | 0.881917
  7 | 0.824958
 15 | 0.816497
  6 | 0.755929
 16 | 0.745356
  5 | 0.680414
 17 | 0.666667
(13 rows)

SELECT  t, similarity(v, '{5,49,8,7,6,5,4,3,2,1}') AS s FROM test_char 
	WHERE v % '{5,49,8,7,6,5,4,3,2,1}' ORDER BY s DESC, t;
 t  |    s     
----+----------
  8 | 0.942809
 11 | 0.942809
 12 | 0.942809
  9 | 0.894427
 10 | 0.894427
  7 |    0.875
 13 |    0.875
  6 | 0.801784
 14 | 0.801784
  5 | 0.721688
 15 | 0.721688
  4 | 0.632456
 16 | 0.632456
(13 rows)

SET anyarray.similarity_type=jaccard;
SELECT  t, similarity(v, '{1,9,8,7,6,5,4,3,2,1}') AS s FROM test_char 
	WHERE v % '{1,9,8,7,6,5,4,3,2,1}' ORDER BY s DESC, t;
 t  |    s     
----+----------
 11 |        1
 12 |        1
  9 |      0.9
 10 |      0.9
 13 | 0.888889
  8 |      0.8
 14 | 0.777778
  7 |      0.7
 15 | 0.666667
  6 |      0.6
(10 rows)

SELECT  t, similarity(v, '{5,49,8,7,6,5,4,3,2,1}') AS s FROM test_char 
	WHERE v % '{5,49,8,7,6,5,4,3,2,1}' ORDER BY s DESC, t;
 t  |    s     
----+----------
  8 | 0.888889
 11 | 0.888889
 12 | 0.888889
  9 |      0.8
 10 |      0.8
  7 | 0.777778
 13 | 0.777778
  6 | 0.666667
 14 | 0.666667
(9 rows)

SELECT t, v FROM test_char WHERE v && '{4,5}' ORDER BY t;
 t  |            v            
----+-------------------------
  4 | {0,1,2,3,4}
  5 | {0,1,2,3,4,5}
  6 | {0,1,2,3,4,5,6}
  7 | {0,1,2,3,4,5,6,7}
  8 | {0,1,2,3,4,5,6,7,8}
  9 | {0,1,2,3,4,5,6,7,8,9}
 10 | {0,1,2,3,4,5,6,7,8,9,1}
 11 | {1,2,3,4,5,6,7,8,9,1,1}
 12 | {2,3,4,5,6,7,8,9,1,1,1}
 13 | {3,4,5,6,7,8,9,1,1,1,1}
 14 | {4,5,6,7,8,9,1,1,1,1,1}
 15 | {5,6,7,8,9,1,1,1,1,1,1}
 40 | {3,3,3,3,3,3,3,3,3,3,4}
 41 | {3,3,3,3,3,3,3,3,3,4,4}
 42 | {3,3,3,3,3,3,3,3,4,4,4}
 43 | {3,3,3,3,3,3,3,4,4,4,4}
 44 | {3,3,3,3,3,3,4,4,4,4,4}
 45 | {3,3,3,3,3,4,4,4,4,4,4}
 46 | {3,3,3,3,4,4,4,4,4,4,4}
 47 | {3,3,3,4,4,4,4,4,4,4,4}
 48 | {3,3,4,4,4,4,4,4,4,4,4}
 49 | {3,4,4,4,4,4,4,4,4,4,4}
 50 | {4,4,4,4,4,4,4,4,4,4,5}
 51 | {4,4,4,4,4,4,4,4,4,5,5}
 52 | {4,4,4,4,4,4,4,4,5,5,5}
 53 | {4,4,4,4,4,4,4,5,5,5,5}
 54 | {4,4,4,4,4,4,5,5,5,5,5}
 55 | {4,4,4,4,4,5,5,5,5,5,5}
 56 | {4,4,4,4,5,5,5,5,5,5,5}
 57 | {4,4,4,5,5,5,5,5,5,5,5}
 58 | {4,4,5,5,5,5,5,5,5,5,5}
 59 | {4,5,5,5,5,5,5,5,5,5,5}
 60 | {5,5,5,5,5,5,5,5,5,5,6}
 61 | {5,5,5,5,5,5,5,5,5,6,6}
 62 | {5,5,5,5,5,5,5,5,6,6,6}
 63 | {5,5,5,5,5,5,5,6,6,6,6}
 64 | {5,5,5,5,5,5,6,6,6,6,6}
 65 | {5,5,5,5,5,6,6,6,6,6,6}
 66 | {5,5,5,5,6,6,6,6,6,6,6}
 67 | {5,5,5,6,6,6,6,6,6,6,6}
 68 | {5,5,6,6,6,6,6,6,6,6,6}
 69 | {5,6,6,6,6,6,6,6,6,6,6}
(42 rows)

SELECT t, v FROM test_char WHERE v @> '{4,5}' ORDER BY t;
 t  |            v            
----+-------------------------
  5 | {0,1,2,3,4,5}
  6 | {0,1,2,3,4,5,6}
  7 | {0,1,2,3,4,5,6,7}
  8 | {0,1,2,3,4,5,6,7,8}
  9 | {0,1,2,3,4,5,6,7,8,9}
 10 | {0,1,2,3,4,5,6,7,8,9,1}
 11 | {1,2,3,4,5,6,7,8,9,1,1}
 12 | {2,3,4,5,6,7,8,9,1,1,1}
 13 | {3,4,5,6,7,8,9,1,1,1,1}
 14 | {4,5,6,7,8,9,1,1,1,1,1}
 50 | {4,4,4,4,4,4,4,4,4,4,5}
 51 | {4,4,4,4,4,4,4,4,4,5,5}
 52 | {4,4,4,4,4,4,4,4,5,5,5}
 53 | {4,4,4,4,4,4,4,5,5,5,5}
 54 | {4,4,4,4,4,4,5,5,5,5,5}
 55 | {4,4,4,4,4,5,5,5,5,5,5}
 56 | {4,4,4,4,5,5,5,5,5,5,5}
 57 | {4,4,4,5,5,5,5,5,5,5,5}
 58 | {4,4,5,5,5,5,5,5,5,5,5}
 59 | {4,5,5,5,5,5,5,5,5,5,5}
(20 rows)

SELECT t, v FROM test_char WHERE v <@ '{4,5}' ORDER BY t;
 t  |            v            
----+-------------------------
 50 | {4,4,4,4,4,4,4,4,4,4,5}
 51 | {4,4,4,4,4,4,4,4,4,5,5}
 52 | {4,4,4,4,4,4,4,4,5,5,5}
 53 | {4,4,4,4,4,4,4,5,5,5,5}
 54 | {4,4,4,4,4,4,5,5,5,5,5}
 55 | {4,4,4,4,4,5,5,5,5,5,5}
 56 | {4,4,4,4,5,5,5,5,5,5,5}
 57 | {4,4,4,5,5,5,5,5,5,5,5}
 58 | {4,4,5,5,5,5,5,5,5,5,5}
 59 | {4,5,5,5,5,5,5,5,5,5,5}
(10 rows)

SELECT t, v FROM test_char WHERE v =  '{0,1,2,3,4,5,6,7,8,9,1}' ORDER BY t;
 t  |            v            
----+-------------------------
 10 | {0,1,2,3,4,5,6,7,8,9,1}
(1 row)

SET anyarray.similarity_type=cosine;
SELECT t, v FROM test_char WHERE v %  '{0,1,2,3,4,5,6,7,8,9,1}' ORDER BY t;
 t  |            v            
----+-------------------------
  3 | {0,1,2,3}
  4 | {0,1,2,3,4}
  5 | {0,1,2,3,4,5}
  6 | {0,1,2,3,4,5,6}
  7 | {0,1,2,3,4,5,6,7}
  8 | {0,1,2,3,4,5,6,7,8}
  9 | {0,1,2,3,4,5,6,7,8,9}
 10 | {0,1,2,3,4,5,6,7,8,9,1}
 11 | {1,2,3,4,5,6,7,8,9,1,1}
 12 | {2,3,4,5,6,7,8,9,1,1,1}
 13 | {3,4,5,6,7,8,9,1,1,1,1}
 14 | {4,5,6,7,8,9,1,1,1,1,1}
 15 | {5,6,7,8,9,1,1,1,1,1,1}
 16 | {6,7,8,9,1,1,1,1,1,1,1}
 17 | {7,8,9,1,1,1,1,1,1,1,1}
(15 rows)

SET anyarray.similarity_type=jaccard;
SELECT t, v FROM test_char WHERE v %  '{0,1,2,3,4,5,6,7,8,9,1}' ORDER BY t;
 t  |            v            
----+-------------------------
  5 | {0,1,2,3,4,5}
  6 | {0,1,2,3,4,5,6}
  7 | {0,1,2,3,4,5,6,7}
  8 | {0,1,2,3,4,5,6,7,8}
  9 | {0,1,2,3,4,5,6,7,8,9}
 10 | {0,1,2,3,4,5,6,7,8,9,1}
 11 | {1,2,3,4,5,6,7,8,9,1,1}
 12 | {2,3,4,5,6,7,8,9,1,1,1}
 13 | {3,4,5,6,7,8,9,1,1,1,1}
 14 | {4,5,6,7,8,9,1,1,1,1,1}
 15 | {5,6,7,8,9,1,1,1,1,1,1}
(11 rows)

SET anyarray.similarity_type=overlap;
SET anyarray.similarity_threshold = 3;
SELECT t, v FROM test_char WHERE v %  '{0,1,2,3,4,5,6,7,8,9,1}' ORDER BY t;
 t  |            v            
----+-------------------------
  2 | {0,1,2}
  3 | {0,1,2,3}
  4 | {0,1,2,3,4}
  5 | {0,1,2,3,4,5}
  6 | {0,1,2,3,4,5,6}
  7 | {0,1,2,3,4,5,6,7}
  8 | {0,1,2,3,4,5,6,7,8}
  9 | {0,1,2,3,4,5,6,7,8,9}
 10 | {0,1,2,3,4,5,6,7,8,9,1}
 11 | {1,2,3,4,5,6,7,8,9,1,1}
 12 | {2,3,4,5,6,7,8,9,1,1,1}
 13 | {3,4,5,6,7,8,9,1,1,1,1}
 14 | {4,5,6,7,8,9,1,1,1,1,1}
 15 | {5,6,7,8,9,1,1,1,1,1,1}
 16 | {6,7,8,9,1,1,1,1,1,1,1}
 17 | {7,8,9,1,1,1,1,1,1,1,1}
 18 | {8,9,1,1,1,1,1,1,1,1,1}
(17 rows)

RESET anyarray.similarity_threshold;
CREATE INDEX idx_test_char ON test_char USING gist (v _char_aa_ops);
SET enable_seqscan=off;
EXPLAIN (COSTS OFF) SELECT t, v FROM test_char WHERE v && '{4,5}' ORDER BY t;
                     QUERY PLAN                     
----------------------------------------------------
 Sort
   Sort Key: t
   ->  Bitmap Heap Scan on test_char
         Recheck Cond: (v && '{4,5}'::"char"[])
         ->  Bitmap Index Scan on idx_test_char
               Index Cond: (v && '{4,5}'::"char"[])
(6 rows)

EXPLAIN (COSTS OFF) SELECT t, v FROM test_char WHERE v @> '{4,5}' ORDER BY t;
                    QUERY PLAN                     
---------------------------------------------------
 Sort
   Sort Key: t
   ->  Index Scan using idx_test_char on test_char
         Index Cond: (v @> '{4,5}'::"char"[])
(4 rows)

EXPLAIN (COSTS OFF) SELECT t, v FROM test_char WHERE v <@ '{4,5}' ORDER BY t;
                    QUERY PLAN                     
---------------------------------------------------
 Sort
   Sort Key: t
   ->  Index Scan using idx_test_char on test_char
         Index Cond: (v <@ '{4,5}'::"char"[])
(4 rows)

EXPLAIN (COSTS OFF) SELECT t, v FROM test_char WHERE v =  '{0,1,2,3,4,5,6,7,8,9,1}' ORDER BY t;
                          QUERY PLAN                           
---------------------------------------------------------------
 Sort
   Sort Key: t
   ->  Index Scan using idx_test_char on test_char
         Index Cond: (v = '{0,1,2,3,4,5,6,7,8,9,1}'::"char"[])
(4 rows)

EXPLAIN (COSTS OFF) SELECT t, v FROM test_char WHERE v %  '{0,1,2,3,4,5,6,7,8,9,1}' ORDER BY t;
                          QUERY PLAN                           
---------------------------------------------------------------
 Sort
   Sort Key: t
   ->  Index Scan using idx_test_char on test_char
         Index Cond: (v % '{0,1,2,3,4,5,6,7,8,9,1}'::"char"[])
(4 rows)

SELECT t, v FROM test_char WHERE v && '{4,5}' ORDER BY t;
 t  |            v            
----+-------------------------
  4 | {0,1,2,3,4}
  5 | {0,1,2,3,4,5}
  6 | {0,1,2,3,4,5,6}
  7 | {0,1,2,3,4,5,6,7}
  8 | {0,1,2,3,4,5,6,7,8}
  9 | {0,1,2,3,4,5,6,7,8,9}
 10 | {0,1,2,3,4,5,6,7,8,9,1}
 11 | {1,2,3,4,5,6,7,8,9,1,1}
 12 | {2,3,4,5,6,7,8,9,1,1,1}
 13 | {3,4,5,6,7,8,9,1,1,1,1}
 14 | {4,5,6,7,8,9,1,1,1,1,1}
 15 | {5,6,7,8,9,1,1,1,1,1,1}
 40 | {3,3,3,3,3,3,3,3,3,3,4}
 41 | {3,3,3,3,3,3,3,3,3,4,4}
 42 | {3,3,3,3,3,3,3,3,4,4,4}
 43 | {3,3,3,3,3,3,3,4,4,4,4}
 44 | {3,3,3,3,3,3,4,4,4,4,4}
 45 | {3,3,3,3,3,4,4,4,4,4,4}
 46 | {3,3,3,3,4,4,4,4,4,4,4}
 47 | {3,3,3,4,4,4,4,4,4,4,4}
 48 | {3,3,4,4,4,4,4,4,4,4,4}
 49 | {3,4,4,4,4,4,4,4,4,4,4}
 50 | {4,4,4,4,4,4,4,4,4,4,5}
 51 | {4,4,4,4,4,4,4,4,4,5,5}
 52 | {4,4,4,4,4,4,4,4,5,5,5}
 53 | {4,4,4,4,4,4,4,5,5,5,5}
 54 | {4,4,4,4,4,4,5,5,5,5,5}
 55 | {4,4,4,4,4,5,5,5,5,5,5}
 56 | {4,4,4,4,5,5,5,5,5,5,5}
 57 | {4,4,4,5,5,5,5,5,5,5,5}
 58 | {4,4,5,5,5,5,5,5,5,5,5}
 59 | {4,5,5,5,5,5,5,5,5,5,5}
 60 | {5,5,5,5,5,5,5,5,5,5,6}
 61 | {5,5,5,5,5,5,5,5,5,6,6}
 62 | {5,5,5,5,5,5,5,5,6,6,6}
 63 | {5,5,5,5,5,5,5,6,6,6,6}
 64 | {5,5,5,5,5,5,6,6,6,6,6}
 65 | {5,5,5,5,5,6,6,6,6,6,6}
 66 | {5,5,5,5,6,6,6,6,6,6,6}
 67 | {5,5,5,6,6,6,6,6,6,6,6}
 68 | {5,5,6,6,6,6,6,6,6,6,6}
 69 | {5,6,6,6,6,6,6,6,6,6,6}
(42 rows)

SELECT t, v FROM test_char WHERE v @> '{4,5}' ORDER BY t;
 t  |            v            
----+-------------------------
  5 | {0,1,2,3,4,5}
  6 | {0,1,2,3,4,5,6}
  7 | {0,1,2,3,4,5,6,7}
  8 | {0,1,2,3,4,5,6,7,8}
  9 | {0,1,2,3,4,5,6,7,8,9}
 10 | {0,1,2,3,4,5,6,7,8,9,1}
 11 | {1,2,3,4,5,6,7,8,9,1,1}
 12 | {2,3,4,5,6,7,8,9,1,1,1}
 13 | {3,4,5,6,7,8,9,1,1,1,1}
 14 | {4,5,6,7,8,9,1,1,1,1,1}
 50 | {4,4,4,4,4,4,4,4,4,4,5}
 51 | {4,4,4,4,4,4,4,4,4,5,5}
 52 | {4,4,4,4,4,4,4,4,5,5,5}
 53 | {4,4,4,4,4,4,4,5,5,5,5}
 54 | {4,4,4,4,4,4,5,5,5,5,5}
 55 | {4,4,4,4,4,5,5,5,5,5,5}
 56 | {4,4,4,4,5,5,5,5,5,5,5}
 57 | {4,4,4,5,5,5,5,5,5,5,5}
 58 | {4,4,5,5,5,5,5,5,5,5,5}
 59 | {4,5,5,5,5,5,5,5,5,5,5}
(20 rows)

SELECT t, v FROM test_char WHERE v <@ '{4,5}' ORDER BY t;
 t  |            v            
----+-------------------------
 50 | {4,4,4,4,4,4,4,4,4,4,5}
 51 | {4,4,4,4,4,4,4,4,4,5,5}
 52 | {4,4,4,4,4,4,4,4,5,5,5}
 53 | {4,4,4,4,4,4,4,5,5,5,5}
 54 | {4,4,4,4,4,4,5,5,5,5,5}
 55 | {4,4,4,4,4,5,5,5,5,5,5}
 56 | {4,4,4,4,5,5,5,5,5,5,5}
 57 | {4,4,4,5,5,5,5,5,5,5,5}
 58 | {4,4,5,5,5,5,5,5,5,5,5}
 59 | {4,5,5,5,5,5,5,5,5,5,5}
(10 rows)

SELECT t, v FROM test_char WHERE v =  '{0,1,2,3,4,5,6,7,8,9,1}' ORDER BY t;
 t  |            v            
----+-------------------------
 10 | {0,1,2,3,4,5,6,7,8,9,1}
(1 row)

SET anyarray.similarity_type=cosine;
SELECT t, v FROM test_char WHERE v %  '{0,1,2,3,4,5,6,7,8,9,1}' ORDER BY t;
 t  |            v            
----+-------------------------
  3 | {0,1,2,3}
  4 | {0,1,2,3,4}
  5 | {0,1,2,3,4,5}
  6 | {0,1,2,3,4,5,6}
  7 | {0,1,2,3,4,5,6,7}
  8 | {0,1,2,3,4,5,6,7,8}
  9 | {0,1,2,3,4,5,6,7,8,9}
 10 | {0,1,2,3,4,5,6,7,8,9,1}
 11 | {1,2,3,4,5,6,7,8,9,1,1}
 12 | {2,3,4,5,6,7,8,9,1,1,1}
 13 | {3,4,5,6,7,8,9,1,1,1,1}
 14 | {4,5,6,7,8,9,1,1,1,1,1}
 15 | {5,6,7,8,9,1,1,1,1,1,1}
 16 | {6,7,8,9,1,1,1,1,1,1,1}
 17 | {7,8,9,1,1,1,1,1,1,1,1}
(15 rows)

SET anyarray.similarity_type=jaccard;
SELECT t, v FROM test_char WHERE v %  '{0,1,2,3,4,5,6,7,8,9,1}' ORDER BY t;
 t  |            v            
----+-------------------------
  5 | {0,1,2,3,4,5}
  6 | {0,1,2,3,4,5,6}
  7 | {0,1,2,3,4,5,6,7}
  8 | {0,1,2,3,4,5,6,7,8}
  9 | {0,1,2,3,4,5,6,7,8,9}
 10 | {0,1,2,3,4,5,6,7,8,9,1}
 11 | {1,2,3,4,5,6,7,8,9,1,1}
 12 | {2,3,4,5,6,7,8,9,1,1,1}
 13 | {3,4,5,6,7,8,9,1,1,1,1}
 14 | {4,5,6,7,8,9,1,1,1,1,1}
 15 | {5,6,7,8,9,1,1,1,1,1,1}
(11 rows)

SET anyarray.similarity_type=overlap;
SET anyarray.similarity_threshold = 3;
SELECT t, v FROM test_char WHERE v %  '{0,1,2,3,4,5,6,7,8,9,1}' ORDER BY t;
 t  |            v            
----+-------------------------
  2 | {0,1,2}
  3 | {0,1,2,3}
  4 | {0,1,2,3,4}
  5 | {0,1,2,3,4,5}
  6 | {0,1,2,3,4,5,6}
  7 | {0,1,2,3,4,5,6,7}
  8 | {0,1,2,3,4,5,6,7,8}
  9 | {0,1,2,3,4,5,6,7,8,9}
 10 | {0,1,2,3,4,5,6,7,8,9,1}
 11 | {1,2,3,4,5,6,7,8,9,1,1}
 12 | {2,3,4,5,6,7,8,9,1,1,1}
 13 | {3,4,5,6,7,8,9,1,1,1,1}
 14 | {4,5,6,7,8,9,1,1,1,1,1}
 15 | {5,6,7,8,9,1,1,1,1,1,1}
 16 | {6,7,8,9,1,1,1,1,1,1,1}
 17 | {7,8,9,1,1,1,1,1,1,1,1}
 18 | {8,9,1,1,1,1,1,1,1,1,1}
(17 rows)

RESET anyarray.similarity_threshold;
DROP INDEX idx_test_char;
CREATE INDEX idx_test_char ON test_char USING gin (v _char_aa_ops);
SET enable_seqscan=off;
EXPLAIN (COSTS OFF) SELECT t, v FROM test_char WHERE v && '{4,5}' ORDER BY t;
                     QUERY PLAN                     
----------------------------------------------------
 Sort
   Sort Key: t
   ->  Bitmap Heap Scan on test_char
         Recheck Cond: (v && '{4,5}'::"char"[])
         ->  Bitmap Index Scan on idx_test_char
               Index Cond: (v && '{4,5}'::"char"[])
(6 rows)

EXPLAIN (COSTS OFF) SELECT t, v FROM test_char WHERE v @> '{4,5}' ORDER BY t;
                     QUERY PLAN                     
----------------------------------------------------
 Sort
   Sort Key: t
   ->  Bitmap Heap Scan on test_char
         Recheck Cond: (v @> '{4,5}'::"char"[])
         ->  Bitmap Index Scan on idx_test_char
               Index Cond: (v @> '{4,5}'::"char"[])
(6 rows)

EXPLAIN (COSTS OFF) SELECT t, v FROM test_char WHERE v <@ '{4,5}' ORDER BY t;
                     QUERY PLAN                     
----------------------------------------------------
 Sort
   Sort Key: t
   ->  Bitmap Heap Scan on test_char
         Recheck Cond: (v <@ '{4,5}'::"char"[])
         ->  Bitmap Index Scan on idx_test_char
               Index Cond: (v <@ '{4,5}'::"char"[])
(6 rows)

EXPLAIN (COSTS OFF) SELECT t, v FROM test_char WHERE v =  '{0,1,2,3,4,5,6,7,8,9,1}' ORDER BY t;
                             QUERY PLAN                              
---------------------------------------------------------------------
 Sort
   Sort Key: t
   ->  Bitmap Heap Scan on test_char
         Recheck Cond: (v = '{0,1,2,3,4,5,6,7,8,9,1}'::"char"[])
         ->  Bitmap Index Scan on idx_test_char
               Index Cond: (v = '{0,1,2,3,4,5,6,7,8,9,1}'::"char"[])
(6 rows)

EXPLAIN (COSTS OFF) SELECT t, v FROM test_char WHERE v %  '{0,1,2,3,4,5,6,7,8,9,1}' ORDER BY t;
                             QUERY PLAN                              
---------------------------------------------------------------------
 Sort
   Sort Key: t
   ->  Bitmap Heap Scan on test_char
         Recheck Cond: (v % '{0,1,2,3,4,5,6,7,8,9,1}'::"char"[])
         ->  Bitmap Index Scan on idx_test_char
               Index Cond: (v % '{0,1,2,3,4,5,6,7,8,9,1}'::"char"[])
(6 rows)

SELECT t, v FROM test_char WHERE v && '{4,5}' ORDER BY t;
 t  |            v            
----+-------------------------
  4 | {0,1,2,3,4}
  5 | {0,1,2,3,4,5}
  6 | {0,1,2,3,4,5,6}
  7 | {0,1,2,3,4,5,6,7}
  8 | {0,1,2,3,4,5,6,7,8}
  9 | {0,1,2,3,4,5,6,7,8,9}
 10 | {0,1,2,3,4,5,6,7,8,9,1}
 11 | {1,2,3,4,5,6,7,8,9,1,1}
 12 | {2,3,4,5,6,7,8,9,1,1,1}
 13 | {3,4,5,6,7,8,9,1,1,1,1}
 14 | {4,5,6,7,8,9,1,1,1,1,1}
 15 | {5,6,7,8,9,1,1,1,1,1,1}
 40 | {3,3,3,3,3,3,3,3,3,3,4}
 41 | {3,3,3,3,3,3,3,3,3,4,4}
 42 | {3,3,3,3,3,3,3,3,4,4,4}
 43 | {3,3,3,3,3,3,3,4,4,4,4}
 44 | {3,3,3,3,3,3,4,4,4,4,4}
 45 | {3,3,3,3,3,4,4,4,4,4,4}
 46 | {3,3,3,3,4,4,4,4,4,4,4}
 47 | {3,3,3,4,4,4,4,4,4,4,4}
 48 | {3,3,4,4,4,4,4,4,4,4,4}
 49 | {3,4,4,4,4,4,4,4,4,4,4}
 50 | {4,4,4,4,4,4,4,4,4,4,5}
 51 | {4,4,4,4,4,4,4,4,4,5,5}
 52 | {4,4,4,4,4,4,4,4,5,5,5}
 53 | {4,4,4,4,4,4,4,5,5,5,5}
 54 | {4,4,4,4,4,4,5,5,5,5,5}
 55 | {4,4,4,4,4,5,5,5,5,5,5}
 56 | {4,4,4,4,5,5,5,5,5,5,5}
 57 | {4,4,4,5,5,5,5,5,5,5,5}
 58 | {4,4,5,5,5,5,5,5,5,5,5}
 59 | {4,5,5,5,5,5,5,5,5,5,5}
 60 | {5,5,5,5,5,5,5,5,5,5,6}
 61 | {5,5,5,5,5,5,5,5,5,6,6}
 62 | {5,5,5,5,5,5,5,5,6,6,6}
 63 | {5,5,5,5,5,5,5,6,6,6,6}
 64 | {5,5,5,5,5,5,6,6,6,6,6}
 65 | {5,5,5,5,5,6,6,6,6,6,6}
 66 | {5,5,5,5,6,6,6,6,6,6,6}
 67 | {5,5,5,6,6,6,6,6,6,6,6}
 68 | {5,5,6,6,6,6,6,6,6,6,6}
 69 | {5,6,6,6,6,6,6,6,6,6,6}
(42 rows)

SELECT t, v FROM test_char WHERE v @> '{4,5}' ORDER BY t;
 t  |            v            
----+-------------------------
  5 | {0,1,2,3,4,5}
  6 | {0,1,2,3,4,5,6}
  7 | {0,1,2,3,4,5,6,7}
  8 | {0,1,2,3,4,5,6,7,8}
  9 | {0,1,2,3,4,5,6,7,8,9}
 10 | {0,1,2,3,4,5,6,7,8,9,1}
 11 | {1,2,3,4,5,6,7,8,9,1,1}
 12 | {2,3,4,5,6,7,8,9,1,1,1}
 13 | {3,4,5,6,7,8,9,1,1,1,1}
 14 | {4,5,6,7,8,9,1,1,1,1,1}
 50 | {4,4,4,4,4,4,4,4,4,4,5}
 51 | {4,4,4,4,4,4,4,4,4,5,5}
 52 | {4,4,4,4,4,4,4,4,5,5,5}
 53 | {4,4,4,4,4,4,4,5,5,5,5}
 54 | {4,4,4,4,4,4,5,5,5,5,5}
 55 | {4,4,4,4,4,5,5,5,5,5,5}
 56 | {4,4,4,4,5,5,5,5,5,5,5}
 57 | {4,4,4,5,5,5,5,5,5,5,5}
 58 | {4,4,5,5,5,5,5,5,5,5,5}
 59 | {4,5,5,5,5,5,5,5,5,5,5}
(20 rows)

SELECT t, v FROM test_char WHERE v <@ '{5,6}' ORDER BY t;
 t  |            v            
----+-------------------------
 60 | {5,5,5,5,5,5,5,5,5,5,6}
 61 | {5,5,5,5,5,5,5,5,5,6,6}
 62 | {5,5,5,5,5,5,5,5,6,6,6}
 63 | {5,5,5,5,5,5,5,6,6,6,6}
 64 | {5,5,5,5,5,5,6,6,6,6,6}
 65 | {5,5,5,5,5,6,6,6,6,6,6}
 66 | {5,5,5,5,6,6,6,6,6,6,6}
 67 | {5,5,5,6,6,6,6,6,6,6,6}
 68 | {5,5,6,6,6,6,6,6,6,6,6}
 69 | {5,6,6,6,6,6,6,6,6,6,6}
(10 rows)

SELECT t, v FROM test_char WHERE v =  '{0,1,2,3,4,5,6,7,8,9,1}' ORDER BY t;
 t  |            v            
----+-------------------------
 10 | {0,1,2,3,4,5,6,7,8,9,1}
(1 row)

SET anyarray.similarity_type=cosine;
SELECT t, v FROM test_char WHERE v %  '{0,1,2,3,4,5,6,7,8,9,1}' ORDER BY t;
 t  |            v            
----+-------------------------
  3 | {0,1,2,3}
  4 | {0,1,2,3,4}
  5 | {0,1,2,3,4,5}
  6 | {0,1,2,3,4,5,6}
  7 | {0,1,2,3,4,5,6,7}
  8 | {0,1,2,3,4,5,6,7,8}
  9 | {0,1,2,3,4,5,6,7,8,9}
 10 | {0,1,2,3,4,5,6,7,8,9,1}
 11 | {1,2,3,4,5,6,7,8,9,1,1}
 12 | {2,3,4,5,6,7,8,9,1,1,1}
 13 | {3,4,5,6,7,8,9,1,1,1,1}
 14 | {4,5,6,7,8,9,1,1,1,1,1}
 15 | {5,6,7,8,9,1,1,1,1,1,1}
 16 | {6,7,8,9,1,1,1,1,1,1,1}
 17 | {7,8,9,1,1,1,1,1,1,1,1}
(15 rows)

SET anyarray.similarity_type=jaccard;
SELECT t, v FROM test_char WHERE v %  '{0,1,2,3,4,5,6,7,8,9,1}' ORDER BY t;
 t  |            v            
----+-------------------------
  5 | {0,1,2,3,4,5}
  6 | {0,1,2,3,4,5,6}
  7 | {0,1,2,3,4,5,6,7}
  8 | {0,1,2,3,4,5,6,7,8}
  9 | {0,1,2,3,4,5,6,7,8,9}
 10 | {0,1,2,3,4,5,6,7,8,9,1}
 11 | {1,2,3,4,5,6,7,8,9,1,1}
 12 | {2,3,4,5,6,7,8,9,1,1,1}
 13 | {3,4,5,6,7,8,9,1,1,1,1}
 14 | {4,5,6,7,8,9,1,1,1,1,1}
 15 | {5,6,7,8,9,1,1,1,1,1,1}
(11 rows)

SET anyarray.similarity_type=overlap;
SET anyarray.similarity_threshold = 3;
SELECT t, v FROM test_char WHERE v %  '{0,1,2,3,4,5,6,7,8,9,1}' ORDER BY t;
 t  |            v            
----+-------------------------
  2 | {0,1,2}
  3 | {0,1,2,3}
  4 | {0,1,2,3,4}
  5 | {0,1,2,3,4,5}
  6 | {0,1,2,3,4,5,6}
  7 | {0,1,2,3,4,5,6,7}
  8 | {0,1,2,3,4,5,6,7,8}
  9 | {0,1,2,3,4,5,6,7,8,9}
 10 | {0,1,2,3,4,5,6,7,8,9,1}
 11 | {1,2,3,4,5,6,7,8,9,1,1}
 12 | {2,3,4,5,6,7,8,9,1,1,1}
 13 | {3,4,5,6,7,8,9,1,1,1,1}
 14 | {4,5,6,7,8,9,1,1,1,1,1}
 15 | {5,6,7,8,9,1,1,1,1,1,1}
 16 | {6,7,8,9,1,1,1,1,1,1,1}
 17 | {7,8,9,1,1,1,1,1,1,1,1}
 18 | {8,9,1,1,1,1,1,1,1,1,1}
(17 rows)

RESET anyarray.similarity_threshold;
